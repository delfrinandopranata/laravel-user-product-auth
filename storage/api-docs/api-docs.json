{
    "openapi": "3.0.0",
    "info": {
        "title": "User Project Timesheet API Documentation",
        "description": "API Authentication for User Project Timesheet by Delfrinando",
        "contact": {
            "email": "delfrinando@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "Log in using email and password to get an access token.",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login with token"
                    },
                    "401": {
                        "description": "Invalid Email and Password"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register",
                "description": "Register a new user with required fields like first name, last name, email, password, and more.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jhondoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully with token"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Authenticated User Profile",
                "description": "Retrieve the profile information of the authenticated user.",
                "operationId": "getAuthenticatedUser",
                "responses": {
                    "200": {
                        "description": "User profile fetched successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Log out the authenticated user and invalidate the token.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully logged out"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh Token",
                "description": "Refresh the authentication token for the user.",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get Project List",
                "description": "Get a list of projects assigned to the authenticated user",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of projects per page",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Project List as Array"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project",
                "description": "Create a new project and assign it to users",
                "operationId": "createProject",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Project Alpha"
                                    },
                                    "department": {
                                        "type": "string",
                                        "example": "Engineering"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-31"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "in_progress"
                                    },
                                    "user_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/projects/{id}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get Project Details",
                "description": "Get details of a specific project by its ID",
                "operationId": "getProjectById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details fetched successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update Project",
                "description": "Update an existing project",
                "operationId": "updateProjectById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Project"
                                    },
                                    "department": {
                                        "type": "string",
                                        "example": "HR"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-02-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-31"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "completed"
                                    },
                                    "user_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete Project",
                "description": "Delete a project by ID",
                "operationId": "deleteProjectById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/timesheets": {
            "get": {
                "tags": [
                    "Timesheets"
                ],
                "summary": "Get list of timesheets",
                "description": "Get a list of timesheets for the authenticated user",
                "operationId": "getTimesheetsList",
                "responses": {
                    "200": {
                        "description": "Timesheets fetched successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Timesheets not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Timesheets"
                ],
                "summary": "Create a new timesheet",
                "description": "Create a new timesheet and assign it to a project",
                "operationId": "createTimesheet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "task_name": {
                                        "type": "string",
                                        "example": "Task Alpha"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-01"
                                    },
                                    "hours": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 8.5
                                    },
                                    "project_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Timesheet created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/timesheets/{id}": {
            "get": {
                "tags": [
                    "Timesheets"
                ],
                "summary": "Get details of a specific timesheet",
                "description": "Fetches the details of a specific timesheet by its ID",
                "operationId": "getTimesheetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Timesheet ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timesheet details fetched successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Timesheet not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Timesheets"
                ],
                "summary": "Update an existing timesheet",
                "description": "Update the details of an existing timesheet by its ID",
                "operationId": "updateTimesheetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Timesheet ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "task_name": {
                                        "type": "string",
                                        "example": "Updated Task"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-02-01"
                                    },
                                    "hours": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 7.5
                                    },
                                    "project_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Timesheet updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Timesheet not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Timesheets"
                ],
                "summary": "Delete a timesheet",
                "description": "Delete a timesheet by its ID",
                "operationId": "deleteTimesheetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Timesheet ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timesheet deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Timesheet not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer": {
                "type": "apiKey",
                "description": "Bearer token, Ex: Bearer <token>",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "bearer": {
                "type": "apiKey",
                "description": "Bearer token, Ex: Bearer <token>",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    ]
}